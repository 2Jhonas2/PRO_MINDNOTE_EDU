// schema.prisma

generator client {
  provider = "prisma-client-js"
  output = "../generated/prisma"
}

datasource db {
  provider = "mysql" 
  url      = env("DATABASE_URL")
}

model Usuario {
  usuario_id        Int        @id @default(autoincrement())
  usuario_nombre    String     @db.VarChar(50)
  usuario_apellido  String     @db.VarChar(50)
  usuario_correo    String     @unique @db.VarChar(100)
  usuario_contrasena String    @db.VarChar(255)
  usuario_rol       String     @db.VarChar(20)
  usuario_preferencia Int?     
  
  // Relaciones
  preferencia   Preferencia? @relation(fields: [usuario_preferencia], references: [preferencia_id])
  tareas        Tarea[]
  historial     HistorialTarea[]

  @@map("usuarios")
}

model Preferencia {
  preferencia_id    Int       @id @default(autoincrement())
  preferencia_nombre String   @unique @db.VarChar(50)

  usuarios Usuario[]

  @@map("preferencias")
}

model EstadoTarea {
  estado_id    Int       @id @default(autoincrement())
  estado_nombre String   @unique @db.VarChar(30)

  tareas      Tarea[]
  historiales HistorialTarea[]

  @@map("estado_tareas")
}

model PrioridadTarea {
  prioridad_id    Int      @id @default(autoincrement())
  prioridad_nombre String  @unique @db.VarChar(30)

  tareas Tarea[]

  @@map("prioridad_tareas")
}

model TipoTarea {
  tipo_id    Int      @id @default(autoincrement())
  tipo_nombre String  @unique @db.VarChar(30)

  tareas Tarea[]

  @@map("tipo_tareas")
}

model Tarea {
  tarea_id          Int      @id @default(autoincrement())
  tarea_titulo      String   @db.VarChar(100)
  tarea_descripcion String
  tarea_fechaLimite DateTime @db.Date
  tarea_hora        DateTime @db.Time

  estado_id     Int
  prioridad_id  Int
  usuario_id    Int
  tipo_id       Int

  // Relaciones
  estado     EstadoTarea    @relation(fields: [estado_id], references: [estado_id])
  prioridad  PrioridadTarea @relation(fields: [prioridad_id], references: [prioridad_id])
  usuario    Usuario        @relation(fields: [usuario_id], references: [usuario_id])
  tipo       TipoTarea      @relation(fields: [tipo_id], references: [tipo_id])
  historial  HistorialTarea[]
  notificaciones Notificacion[]

  @@map("tareas")
}

model HistorialTarea {
  historial_id        Int      @id @default(autoincrement())
  historial_fechaRegistro DateTime @default(now())

  tarea_id   Int
  usuario_id Int
  estado_id  Int

  tarea   Tarea    @relation(fields: [tarea_id], references: [tarea_id])
  usuario Usuario  @relation(fields: [usuario_id], references: [usuario_id])
  estado  EstadoTarea @relation(fields: [estado_id], references: [estado_id])

  @@map("historial_tareas")
}

model Notificacion {
  notificacion_id        Int      @id @default(autoincrement())
  notificacion_mensaje   String
  notificacion_fechaEnvio DateTime @default(now())
  notificacion_entregado Boolean   @default(false)

  tarea_id Int
  tarea    Tarea @relation(fields: [tarea_id], references: [tarea_id])

  @@map("notificaciones")
}
